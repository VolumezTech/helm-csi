kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: vlz-csi-controller
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: "vlz-csi-controller"
  replicas: 1
  selector:
    matchLabels:
      app: vlz-csi-controller
  template:
    metadata:
      labels:
        app: vlz-csi-controller
        deploymentRevisionId: "{{ .Release.Revision }}" # this here updates and forces refresh
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: vlz-csi-controller-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: csi-snapshotter
          image: registry.k8s.io/sig-storage/csi-snapshotter:{{ .Values.sidecars.snapshotter.tag }}
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--timeout=90s"
            - "--retry-interval-start=10s"
            - "--retry-interval-max=40m"
            - "--extra-create-metadata"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false

        - name: csi-snapshot-controller
          image: registry.k8s.io/sig-storage/snapshot-controller:{{ .Values.sidecars.snapshotController.tag }}
          args:
            - "--v=5"
          imagePullPolicy: IfNotPresent
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false

        - name: csi-provisioner
          image: registry.k8s.io/sig-storage/csi-provisioner:{{ .Values.sidecars.provisioner.tag }}
          args:
            - "--csi-address=$(ADDRESS)"
            - "--extra-create-metadata"
            - "--feature-gates=Topology=true"
            - "--controller-publish-readonly=true"
            - "--timeout=320s"
            - "--retry-interval-start=10s"
            - "--retry-interval-max=40m"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          imagePullPolicy: "Always"
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false

        - name: csi-attacher
          image: registry.k8s.io/sig-storage/csi-attacher:{{ .Values.sidecars.attacher.tag }}
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--timeout=200s"
            - "--retry-interval-start=10s"
            - "--retry-interval-max=40m"
            - "--worker-threads={{ .Values.sidecars.attacher.workers }}"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          imagePullPolicy: "Always"
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false

        - name: csi-resizer
          image: registry.k8s.io/sig-storage/csi-resizer:{{ .Values.sidecars.resizer.tag }}
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--timeout=200s"
            - "--retry-interval-start=10s"
            - "--retry-interval-max=40m"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          imagePullPolicy: "Always"
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false

        - name: vlz-snapshotrollback-controller
          image: "{{ .Values.vlzSnapshotRollbackController.repository }}:{{ .Values.vlzSnapshotRollbackController.tag }}"
          imagePullPolicy: "Always"
          args:
            - "--volumezendpoint=$(VOLUMEZ_ENDPOINT)"
            - "--volumezEndpointBasePath=$(VOLUMEZ_ENDPOINT_BASE_PATH)"
            - "--volumezauthtoken=$(VOLUMEZ_AUTH_TOKEN)"
          env:
            - name: VOLUMEZ_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: vlz-config
                  key: VOLUMEZ_ENDPOINT
            - name: VOLUMEZ_ENDPOINT_BASE_PATH
              valueFrom:
                configMapKeyRef:
                  name: vlz-config
                  key: VOLUMEZ_ENDPOINT_BASE_PATH
            - name: VOLUMEZ_AUTH_TOKEN
              valueFrom:
                configMapKeyRef:
                  name: vlz-config
                  key: VOLUMEZ_AUTH_TOKEN
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false

        - name: vlz
          image: "{{ .Values.vlzCsiDriver.repository }}:{{ .Values.vlzCsiDriver.tag }}"
          imagePullPolicy: "Always"
          args:
            - "--mode=controller"
            - "--nodeid=$(NODE_ID)"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--volumez-endpoint=$(VOLUMEZ_ENDPOINT)"
            - "--volumez-endpoint-base-path=$(VOLUMEZ_ENDPOINT_BASE_PATH)"
            - "--volumez-auth-token=$(VOLUMEZ_AUTH_TOKEN)"
            - "--driver-suffix=$(DRIVER_NAME_SUFFIX)"
            - "--enable-metrics=$(ENABLE_METRICS)"
            - "--v=$(VERBOSE_LEVEL)"
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          envFrom:
            - configMapRef:
                name: vlz-config
          {{- if .Values.metrics.enable }}
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
          {{- end }}
          volumeMounts:
            - name: socket-dir
              mountPath: /plugin
            - name: volumez-logs
              mountPath: /var/log/volumez
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
      volumes:
        - name: socket-dir
          emptyDir:
        - name: volumez-logs
          emptyDir: {}
{{- if .Values.controller.tolerations }}
      tolerations:
{{ toYaml .Values.controller.tolerations | indent 8 }}
{{- end -}}
{{- if .Values.controller.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.controller.nodeSelector | indent 8 }}
{{- end -}}
