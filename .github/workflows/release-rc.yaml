name: Release Charts Dev

on:
  push:
    branches:
      - 'rc/*'

jobs:
  updateChartVersion:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
          
      - name: Update Chart Version
        id: update_chart_version
        run: |
          
          # Get the version number from Chart.yaml in the base commit
          git fetch &> /dev/null
          base_commit=$(git rev-parse HEAD)
          previous_version=$(git show $base_commit:charts/volumez-csi/Chart.yaml | grep '^version:' | awk '{print $2}')
          echo "previous version:" $previous_version
          
          if [[ $previous_version == *"rc"* ]]; then
            # Increment the RC version
            rc_version=$(echo $previous_version | awk -F '-rc.' '{print $2}')
            new_rc_version=$(expr $rc_version + 1)
            new_version=$(echo $previous_version | sed "s/rc.$rc_version/rc.$new_rc_version/")
          else
            # Increment the minor version
            major_version=$(echo $previous_version | awk -F '.' '{print $1}')
            minor_version=$(echo $previous_version | awk -F '.' '{print $2}')
            patch_version=$(echo $previous_version | awk -F '.' '{print $3}')
            new_minor_version=$(expr $minor_version + 1)
            new_version="$major_version.$new_minor_version.0"
            new_version="$new_version-rc.1"
          fi
          echo "new version:" $new_version
          echo "NEW_CHART_VERSION=$new_version" >> $GITHUB_OUTPUT
          sed -i "0,/version:/s/version:.*/version: $new_version/" charts/volumez-csi/Chart.yaml
      
      - name: Commit&Push Changes
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git commit -a -m "Update chart version to ${{ steps.update_chart_version.outputs.NEW_CHART_VERSION }}"
          git push
    
    
  release:
    runs-on: ubuntu-latest
    needs: updateChartVersion
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0 

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git fetch &> /dev/null
      - name: Add repositories
        run: |
          for dir in $(ls -d charts/*/); do
            helm dependency list $dir 2> /dev/null | tail +2 | head -n 1 | awk '{ print "helm repo add " $1 " " $3 }' | while read cmd; do $cmd; done
          done
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@main
        with:
          skip_existing: true 
          mark_as_latest: false 
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
